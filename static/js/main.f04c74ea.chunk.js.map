{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","react_default","a","createElement","children","ExpensesFilter","value","selected","onChange","event","onChangeYear","target","ExpenseDate","year","date","getFullYear","month","toLocaleString","day","ExpenseItem","components_UI_Card","components_Expenses_ExpenseDate","title","amount","ExpensesList","items","length","map","expense","components_Expenses_ExpenseItem","key","id","ChartBar","barFillHeight","max","Math","round","maxValue","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","apply","Object","toConsumableArray","components_Chart_ChartBar","ExpensesChart","_step","chartDataPoints","_iterator","_createForOfIteratorHelper","expenses","s","n","done","getMonth","err","e","f","components_Chart_Chart","Expenses","_useState","useState","_useState2","slicedToArray","filteredYear","setFilteredYear","filteredbyYear","filter","toString","components_Expenses_ExpensesFilter","selectedYear","Expenses_ExpensesChart","components_Expenses_ExpensesList","ExpenseForm","enteredTitle","setEnteredTitle","_useState3","_useState4","enteredAmount","setEnteredAmount","_useState5","_useState6","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","components_NewExpense_ExpenseForm","enteredExpenseData","objectSpread","random","onAddExpense","Dummy_Expenses","App","setExpenses","background","textAlign","padding","color","components_NewExpense_NewExpense","preExpenses","concat","components_Expenses_Expenses","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.f04c74ea.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../UI/Card.css';\r\n\r\nconst Card = (props) => {\r\n    const classes = 'card ' + props.className;\r\n  return <div className={classes}> {props.children}</div>;\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n\r\nconst selectYearHandler = (event) => {\r\n    props.onChangeYear(event.target.value);\r\n};\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={selectYearHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import React from 'react';\r\nimport '../Expenses/ExpenseDate.css';\r\n\r\nconst ExpenseDate = (props) => {\r\n\r\n    const year = props.date.getFullYear();\r\n    const month = props.date.toLocaleString('en-US', { month: 'long'});\r\n    const day = props.date.toLocaleString('en-US', { day: '2-digit'});\r\n\r\n  return (\r\n    <div className='expense-date'>\r\n        <div className='expense-date__day'>{day}</div>\r\n        <div className='expense-date__month'>{month}</div>\r\n        <div className='expense-date__year'>{year}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n\r\n","import React from 'react';\r\nimport ExpenseDate from '../Expenses/ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport '../Expenses/ExpenseItem.css';\r\n\r\n\r\nconst ExpenseItem = (props) => {\r\n\r\n    return (\r\n        <Card className=\"expense-item\">\r\n            <ExpenseDate date={props.date}/>\r\n            <div className=\"expense-item__description\">\r\n                <h2>{props.title}</h2>  \r\n                <div className=\"expense-item__price\">${props.amount}</div>\r\n            </div>\r\n       </Card>\r\n    );\r\n}\r\n\r\nexport default ExpenseItem;","import React from 'react';\r\nimport ExpenseItem from './ExpenseItem';\r\nimport './ExpensesList.css';\r\n\r\nconst ExpensesList = (props) => {\r\n\r\nif (props.items.length === 0) {\r\n  return <h2 className='expenses-list__fallback'>Found no expenses.</h2>;\r\n}\r\n\r\nreturn (\r\n    <ul className='expenses-list'>\r\n       {props.items.map((expense) => ( \r\n        <ExpenseItem \r\n        key={expense.id}\r\n        title={expense.title}\r\n        amount={expense.amount}\r\n        date={expense.date}\r\n       />\r\n      ))}\r\n    </ul>\r\n)\r\n\r\n};\r\n\r\nexport default ExpensesList;","import React from \"react\";\r\nimport './ChartBar.css'\r\n\r\nconst ChartBar = (props) => {\r\n    let barFillHeight ='0%';\r\n\r\n    if (props.max > 0) {\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n    }\r\n    return (\r\n       <div className='chart-bar'>\r\n           <div className='chart-bar__inner'>\r\n                <div className='chart-bar__fill' style={{height: barFillHeight}}></div>\r\n           </div>\r\n           <div className='chart-bar__label'>{props.label}</div>\r\n       </div>\r\n    );\r\n};\r\n\r\nexport default ChartBar;","import React from \"react\";\r\nimport ChartBar from \"./ChartBar\";\r\nimport './Chart.css'\r\n\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n    return (\r\n        <div className='chart'>\r\n         {props.dataPoints.map((dataPoint) => \r\n            (<ChartBar \r\n                key={dataPoint.label}\r\n                value={dataPoint.value} \r\n                maxValue={totalMaximum} \r\n                label={dataPoint.label}\r\n                />\r\n            ))}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n   const chartDataPoints = [\r\n      { label: 'Jan', value: 0 },\r\n      { label: 'Feb', value: 0 },\r\n      { label: 'Mar', value: 0 },\r\n      { label: 'Apr', value: 0 },\r\n      { label: 'May', value: 0 },\r\n      { label: 'Jun', value: 0 },\r\n      { label: 'Jul', value: 0 },\r\n      { label: 'Aug', value: 0 },\r\n      { label: 'Sep', value: 0 },\r\n      { label: 'Oct', value: 0 },\r\n      { label: 'Nov', value: 0 },\r\n      { label: 'Dec', value: 0 },\r\n   ];\r\n\r\n   for (const expense of props.expenses) {\r\n      const expenseMonth = expense.date.getMonth(); // starting at 0 = January => 0\r\n      chartDataPoints[expenseMonth].value += expense.amount;\r\n   }\r\n\r\n    return (\r\n     <Chart dataPoints={chartDataPoints} />\r\n    );\r\n};\r\n\r\nexport default ExpensesChart;","\r\nimport React, { useState } from 'react';\r\nimport Card from \"../UI/Card\";\r\nimport '../Expenses/Expenses.css';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesChart from './ExpensesChart';\r\n\r\nconst Expenses = (props) => {\r\n\r\n  const [filteredYear, setFilteredYear] = useState('2020');\r\n\r\n  const changeYearHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  }; \r\n\r\n  const filteredbyYear = props.items.filter(expense => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <li>\r\n    <Card className=\"expenses\">\r\n    <ExpensesFilter \r\n      selected={filteredYear} \r\n      onChangeYear={changeYearHandler}\r\n     />\r\n     <ExpensesChart expenses={filteredbyYear} />\r\n     <ExpensesList items={filteredbyYear}/>\r\n    </Card>\r\n    </li>\r\n  )\r\n}  \r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n\r\nconst [enteredTitle, setEnteredTitle] = useState('');\r\nconst [enteredAmount, setEnteredAmount] = useState('');\r\nconst [enteredDate, setEnteredDate] = useState('');\r\n\r\n    const titleChangeHandler = (event) => {\r\n        setEnteredTitle(event.target.value);\r\n    };\r\n\r\n    const amountChangeHandler = (event) => {\r\n        setEnteredAmount(event.target.value);\r\n    };\r\n\r\n    const dateChangeHandler = (event) => {\r\n        setEnteredDate(event.target.value);\r\n    };\r\n\r\n    const submitHandler = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: +enteredAmount,\r\n            date: new Date(enteredDate),\r\n        };\r\n\r\n        props.onSaveExpenseData(expenseData);\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n    };\r\n\r\n    return <form onSubmit={submitHandler}>\r\n        <div className=\"new-expense__controls\">\r\n            <div className=\"new-expense__control\">\r\n               <label>Title</label>\r\n               <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler}/>\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n               <label>Amount</label>\r\n               <input type=\"number\" min='1' step='0.01' value={enteredAmount} onChange={amountChangeHandler}/>\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n               <label>Date</label>\r\n               <input type=\"date\" min='2019-01-01' step='2022-12-31' value={enteredDate} onChange={dateChangeHandler}/>\r\n            </div>\r\n        </div>\r\n        <div className=\"new-expense__actions\">\r\n                <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n               <button type='submit'>Add Expense</button>\r\n        </div>\r\n    </form>\r\n\r\n};\r\n\r\nexport default ExpenseForm;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from \"react\";\r\n// import { useState } from \"react\";\r\n// import './ExpenseForm.css';\r\n\r\n// const ExpenseForm = () => {\r\n\r\n//     const [enteredTitle, setEnteredTitle] = useState('');\r\n//     const [enteredAmount, setEnteredAmount] = useState('');\r\n//     const [enteredDate, setEnteredDate] = useState('');\r\n\r\n//     // const [userInput, setUserInput] = useState({\r\n//     //     enteredTitle: '',\r\n//     //     enteredAmount: '',\r\n//     //     enteredDate: ''\r\n//     // });\r\n\r\n//     const titleChangeHandler = (event) => {\r\n//         setEnteredTitle(event.target.value);\r\n\r\n//         // setUserInput({\r\n//         //     ...userInput,\r\n//         //     enteredTitle: event.target.value,\r\n//         // });\r\n\r\n//         // setUserInput((prevState) => {\r\n//         //     return{...prevState, enteredTitle: event.target.value };\r\n//         // });\r\n\r\n//     };\r\n\r\n//     const amountChangeHandler = (event) => {\r\n//         setEnteredAmount(event.target.value);\r\n\r\n//         // setUserInput({\r\n//         //     ...userInput,\r\n//         //     enteredAmout: event.target.value,\r\n//         // });\r\n//     };\r\n\r\n//     const dateChangeHandler = (event) => {\r\n//         setEnteredDate(event.target.value);\r\n\r\n//         // setUserInput({\r\n//         //     ...userInput,\r\n//         //    enteredDate: event.target.value,\r\n//         // });\r\n//     };\r\n\r\n//     const submitHandler = (event) => {\r\n//        event.preventDefault();\r\n\r\n//        const expenseData = {\r\n//         title: enteredTitle,\r\n//         amount: enteredAmount,\r\n//         date: new Date(enteredDate)\r\n//        };\r\n\r\n//        console.log(expenseData);\r\n//        setEnteredTitle('');\r\n//        setEnteredAmount('');\r\n//        setEnteredDate('');\r\n//     };\r\n\r\n//     return <form onSubmit={submitHandler}>\r\n//         <div className='new-expense__controls'>\r\n//             <div className='new-expense__control'>\r\n//                <label>Title</label>\r\n//                <input type='text' value={enteredTitle} onChange={titleChangeHandler} />\r\n//             </div>\r\n//             <div className='new-expense__control'>\r\n//                <label>Amount</label>\r\n//                <input type='number' min=\"1\" step=\"0.01\" value={enteredAmount} onChange={amountChangeHandler} />\r\n//             </div>\r\n//             <div className='new-expense__control'>\r\n//                <label>Date</label>\r\n//                <input type='date' min=\"2019-01-01\" step=\"2022-12-31\" value={enteredDate} onChange={dateChangeHandler} />\r\n//             </div>\r\n//         </div>\r\n//         <div className='new-expense__actions'>\r\n//             <button type='submit'>Add Expense</button>\r\n//         </div>\r\n//     </form>\r\n        \r\n\r\n// };\r\n\r\n// export default ExpenseForm;","\r\nimport React, { useState } from \"react\";\r\nimport './NewExpense.css';\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\n\r\nconst NewExpense = (props) => {\r\n\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    const saveExpenseDataHandler = (enteredExpenseData) => {\r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString()\r\n        };\r\n        props.onAddExpense(expenseData);\r\n        setIsEditing(false);\r\n    };\r\n\r\n    const startEditingHandler = () => {\r\n        setIsEditing(true);\r\n    };\r\n\r\n    const stopEditingHandler = () => {\r\n        setIsEditing(false);\r\n    };\r\n\r\n\r\n    return <div className=\"new-expense\">\r\n       {!isEditing && (\r\n         <button onClick={startEditingHandler}>Add New Expense</button>\r\n       )}\r\n       {isEditing && (\r\n        <ExpenseForm \r\n          onSaveExpenseData={saveExpenseDataHandler} \r\n          onCancel={stopEditingHandler}\r\n        /> \r\n       )}\r\n    </div> \r\n};\r\n\r\nexport default NewExpense;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from \"react\";\r\n// import './NewExpense.css';\r\n// import ExpenseForm from './ExpenseForm';\r\n\r\n// const NewExpense = () => {\r\n\r\n// return <div className='new-expense'>\r\n//     <ExpenseForm />\r\n// </div>\r\n\r\n// };\r\n\r\n// export default NewExpense;\r\n","import React, { useState } from 'react'\n\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\nimport Card from './components/UI/Card';\n\n  const Dummy_Expenses = [ \n    {\n      id: 'e1',\n      title: 'Breakfast',\n      amount: '40',\n      date: new Date(2022, 12, 2),\n    },\n    {\n      id: 'e2',\n      title: 'Taxi',\n      amount: '20',\n      date: new Date(2021, 12, 4),\n    },\n    {\n      id: 'e3',\n      title: 'Mobile EC',\n      amount: '10',\n      date: new Date(2020, 12, 5),\n    },\n    {\n      id: 'e4',\n      title: 'Evening Snacks',\n      amount: '5',\n      date: new Date(2020, 12, 6),\n    },\n  ];\n\n  const App = () => {\n\n  const [expenses, setExpenses] = useState(Dummy_Expenses);\n\n  const addExpenseHandler = (expense) => {\n     setExpenses((preExpenses) => {\n      return [expense, ...preExpenses];\n     });\n  };\n\n  return (\n    <div style={{background: 'grey'}}>\n      <Card><h2 style={{textAlign: 'center', padding: '10px', color:'#fff'}}>Expense Manager</h2></Card>\n        <NewExpense onAddExpense={addExpenseHandler} />\n        <Expenses items={expenses}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}